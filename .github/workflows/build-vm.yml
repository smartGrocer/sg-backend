name: Deploy

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  tests:
    name: build and test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: npm
          cache-dependency-path: ./backend/package-lock.json

      - name: Install Dependencies
        id: npm-ci
        run: npm ci

      - name: build
        id: npm-build
        run: npm run build

      # - name: Lint
      #   id: npm-lint
      #   run: npm run lint
      # - name: Test
      #   id: npm-ci-test
      #   run: npm run test:ci

      # test build

  build_publish_docker:
    name: Build and Publish Docker Image
    runs-on: ubuntu-latest
    needs: tests
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN_GIT_REG }}

      - name: Set Docker tag
        id: set-docker-tag
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "TAG=pr-${{ github.event.number }}" >> $GITHUB_ENV
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "TAG=latest" >> $GITHUB_ENV
          fi

      - name: Build and push Docker Image
        run: docker build . -t ghcr.io/smartgrocer/sg-backend:${{ env.TAG }} --push --platform linux/amd64

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build_publish_docker
  #   if: github.ref == 'refs/heads/main'

  #   steps:
  #     - name: Deploy using ssh
  #       uses: appleboy/ssh-action@master
  #       with:
  #         host: ${{ secrets.HOST }}
  #         username: ${{ secrets.USERNAME }}
  #         key: ${{ secrets.SSH_PRIVATE_KEY }}
  #         port: 22
  #         script: |
  #           cd sg-backend
  #           git checkout HEAD .
  #           git pull
  #           docker login ghcr.io -u nmpereira -p ${{ secrets.DOCKER_TOKEN_GIT_REG }}
  #           docker pull ghcr.io/smartgrocer/sg-backend:latest
  #           echo ${{ secrets.VM_PASSWORD }} | sudo -S -k docker compose -f docker-compose.prod.yml down
  #           echo ${{ secrets.VM_PASSWORD }} | sudo -S -k docker compose -f docker-compose.prod.yml up --build -d --remove-orphans
