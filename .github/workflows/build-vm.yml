name: Deploy

# Controls when the action will run.
on:
    # Triggers the workflow on push or pull request events but only for the master branch
    push:
        branches: [main]
        paths-ignore:
            - "README.md"
            - "LICENSE"
            - app/api/**

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    tests:
        name: build and test
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              id: checkout
              uses: actions/checkout@v4

            - name: Setup Node.js
              id: setup-node
              uses: actions/setup-node@v4
              with:
                  node-version-file: ".nvmrc"
                  cache: npm

            - name: Install Dependencies
              id: npm-ci
              run: npm ci

            - name: Check Format
              id: npm-format-check
              run: npm run format:check

            - name: Lint
              id: npm-lint
              run: npm run lint

            - name: Test
              id: npm-ci-test
              run: npm run ci-test
    # This workflow contains a single job called "build"
    deploy:
        # The type of runner that the job will run on
        runs-on: ubuntu-latest
        needs: tests
        # Steps represent a sequence of tasks that will be executed as part of the job
        steps:
            - name: Deploy using ssh
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOST }}
                  username: ${{ secrets.USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  port: 22
                  script: |
                      cd sg-backend
                      git checkout HEAD .
                      git pull
                      echo ${{ secrets.VM_PASSWORD }} | sudo -S -k docker compose -f docker-compose.prod.yml down 
                      echo ${{ secrets.VM_PASSWORD }} | sudo -S -k docker compose -f docker-compose.prod.yml up --build -d
